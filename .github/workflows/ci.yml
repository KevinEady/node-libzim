# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:

  macOS:
    runs-on: macos-11

    strategy:
      matrix:
        node-version: [16, 18]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: installing add on packages
      run: brew install ossp-uuid

    - name: setup ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: setting path
      run: PATH=$PATH:$HOME/bin

    - name: installing meson
      run: pip3 install meson

    - name: configure and build libzim
      run: pushd libzim && meson setup . build --buildtype debug -Dwith_xapian=false && ninja -C build && popd
    
    - name: installing dependencies
      run: npm i

    - name: installing typescript
      run: npm i -g typescript

    - name: copy libzim
      run: ls -l libzim/build/src && cp libzim/build/src/libzim.8.dylib build/Release/ 

    - name: running test-mem-leak
      run: npm run test-mem-leak

  Ubuntu-Focal:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16, 18]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: installing add on packages
      run: sudo apt install gcc g++ python3-pip libbz2-dev ccache zlib1g-dev uuid-dev

    - name: setup ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: setting path
      run: PATH=$PATH:$HOME/bin

    - name: installing meson
      run: pip3 install meson

    - name: configure and build libzim
      run: pushd libzim && meson setup . build --buildtype debug -Dwith_xapian=false && ninja -C build && popd

    - name: installing dependencies
      run: npm i

    - name: installing typescript
      run: npm i -g typescript

    - name: copy libzim
      run: ls -l libzim/build/src && cp libzim/build/src/libzim.8.so build/Release/ 

    # - name: installing codecov
    #   run: npm i codecov

    - name: running test-mem-leak
      run: npm run test-mem-leak

    # - name: running codecov
    #   run: npm run codecov

    # - name: codecov action
    #   uses: codecov/codecov-action@v1
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}

  Ubuntu-Jammy:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [16, 18]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: installing add on packages
      run: sudo apt install gcc g++ python3-pip libbz2-dev ccache zlib1g-dev uuid-dev

    - name: setup ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: setting path
      run: PATH=$PATH:$HOME/bin

    - name: installing meson
      run: pip3 install meson

    - name: configure and build libzim
      run: pushd libzim && meson setup . build --buildtype debug -Dwith_xapian=false && ninja -C build && popd

    - name: installing dependencies
      run: npm i

    - name: installing typescript
      run: npm i -g typescript

    - name: copy libzim
      run: ls -l libzim/build/src && cp libzim/build/src/libzim.8.so build/Release/ 

    # - name: installing codecov
    #   run: npm i codecov

    - name: running test-mem-leak
      run: npm run test-mem-leak

    # - name: running codecov
    #   run: npm run codecov

    # - name: codecov action
    #   uses: codecov/codecov-action@v1
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
